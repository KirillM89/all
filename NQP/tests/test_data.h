#ifndef QP_NNLS_TEST_DATA_H
#define QP_NNLS_TEST_DATA_H
#include "types.h"
using namespace QP_NNLS;
namespace QP_NNLS_TEST_DATA {
    // 0.5 x_T * H * x + c_T * x ; A * x < b; lw <= x <= up

const UserSettings NqpTestSettingsDefault;
const Settings NqpTestSettingsDefaultNewInterface;
namespace TRANSFORMATION_MATRIX {
    const matrix_t trMat1 = {{1.0, 2.0}, {-1.0, 3.0}};
	const matrix_t trMat2 = {{-4.0, 18.0}, {1.0, -6.0}};
	const matrix_t trMat3 = {{-7.0, 0.0}, {-4.0, 9.0}};
	const matrix_t trMat4 = {{15.0, 7.0}, {8.0, -2.0}};
	const matrix_t trMat5 = {{-1.0, 3.0}, {7.0, 24.0}};
}
namespace PSDM { // positive semidefinite matrix
	const matrix_t mat1 = {{100.0, 1.0}, {1.0 , 5.0}};
	const matrix_t mat2 = {{100.0, 2.0}, {2.0, 7.0}};
	const matrix_t mat3 = {{100.0, -10.0}, {-10.0, 300.0}};
	const matrix_t mat4 = {{100.0, -199.9999}, {-199.9999, 400.0}};
	const matrix_t mat5 = {{10000.0 , 1.0 , 2.0}, {1.0 , 1000.0, 5.0} ,{2.0 , 5.0, 10.0}};
	const matrix_t mat6 = {{10000.0 , 1.0 , 2.0 , 3.0}, {1.0 , 1000.0, 5.0, 7.0}, {2.0 , 5.0, 100.0 , 6.0}, {3.0, 7.0, 6.0, 1.0}};
}
namespace SIMPLE_1 {
    const matrix_t H; 
	const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { { 0.0, -1.0 } };
	const std::vector<double> b = { -1.0 };
}
namespace SIMPLE_2 {
    const matrix_t H= {{1.0 , 0.0}, {0.0, 1.0}};
	const std::vector<double> c = {0.0, 0.0};
	const matrix_t A = {{-1.0, -1.0}, {2.0 , -1.0}};
	const std::vector<double> b = {-1.0, -1.0};
}
namespace CASE_1 {
    const matrix_t H; // identity hessian
    const std::vector<double> c =  { 2.17299e6, -13162.7, 1.36145e6, 557966.0, 1.46127e7, 6.23872e6, 24368.4, -24368.4, -14567.7, -9040.55, 46731.1, 36536.2 };
    const matrix_t A = { {1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
					{-1.0, -0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
					{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
					{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0} };
    const std::vector<double> b = {1.0e-7, 1.0e-7, 1.0e-7, 1.0e-7, 9998.4, 0.100553, 0.0107047, 5.9893, 9998.69, 0.0107047, 9998.73, 0.367332, 0.189295, 0.0107047, 0.189295, 0.0107047,
				  0.0107047, 0.989295, 10.0, 10.0, 50.0, 1.0e-8, 50.0, 1.0e-8, 50.0, 1.0e-8, 50.0, 1.0e-8 };
}
namespace CASE_2 {
	const matrix_t H = { {1.0, 0.0}, {0.0, 1.0} };
	const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { {1.0, -1.0} };
	const std::vector<double> b = { -1.0 };
}
namespace CASE_3 {
	const matrix_t H = { {1.0, 0.0}, {0.0, 1.0} };
	const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { {1.0, -1.0}, {-1.0, 0.0} };
	const std::vector<double> b = { -1.0, -0.5 };
}
namespace CASE_4 {
	const matrix_t H = { {1.0, 0.0}, {0.0, 1.0} };
	const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { {1.0, -1.0}, {-2.0 / 3.0, -1.0}, {1.0, 0.0} };
	const std::vector<double> b = { -1.0, -1.0, 1.5 };
}
namespace CASE_5 {
    const matrix_t H = { {1.0, 0.0}, {0.0, 1.0} };
	const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { {1.0, -1.0}, {-2.0 / 3.0, -1.0}, {-1.0, 0.0} };
	const std::vector<double> b = { -1.0, -1.0, -1.5 };
}
namespace CASE_6 {
    const matrix_t H = { {1.0, 0.0}, {0.0, 1.0} };
	const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { {-1.0, -1.0}, {2.0, -1.0}, {0.0, 1.0}, {0.0, -1.0} };
	const std::vector<double> b = { -1.0, -1.0, 1.5, 0.0 };
}
namespace CASE_7 {
    const matrix_t H = { {1.0, 0.0}, {0.0, 1.0} };
	const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { {-1.0, -1.0}, {2.0, -1.0}, {0.0, 1.0}, {0.0, -1.0}, {1.0, 0.0} };
	const std::vector<double> b = { -1.0, -1.0, 1.5, 0.0, -0.5 };
}
namespace CASE_8 {
    const matrix_t H = { {1.0, 0.0}, {0.0, 1.0} };
	const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { {-1.0, -1.0}, {2.0, -1.0} };
	const std::vector<double> b = {-1.0, -1.0};
	const std::vector<double> lw = {-1.0, 2.0 };
	const std::vector<double> up = { 3.0, 5.0 };
}
namespace CASE_9 {
	const matrix_t H = { {1.0 , 0.0}, {0.0, 1.0} };
	const std::vector<double> c = { 3.0, 1.25 };
	const matrix_t A = { {-1.0, -1.0}, {2.0, -1.0}, {0.0, 1.0}, {1.0, 0.0}, {-2.0, -2.0}, {0.0, 5.0} };
	const std::vector<double> b = { -1.0, -1.0, 1.5, -0.5, -2.0, 7.5 };
}
namespace CASE_10 {
	const matrix_t H = { {10.0, 10.0}, {10.0, 20000.0} };
	const std::vector<double> c = { 55.0, -5.0 };
	const matrix_t A = { {-1.0, -1.0}, {2.0, -1.0} };
	const std::vector<double> b = {-1.0, -1.0 };
}
namespace CASE_11 {
	const matrix_t H = { {1.0, 0.0}, {0.0, 2.0} };
	const std::vector<double> c = { 3.0, 1.25 };
	const matrix_t A = { {-1.0, -1.0}, {2.0, -1.0}, {0.0, 1.0}, {1.0, 0.0}};
	const std::vector<double> b = { -1.0, -1.0, 1.5, -0.5};
}
namespace CASE_12 {
    const matrix_t H;
    const std::vector<double> c = { 2.17299e6, -13162.7, 1.36145e6, 557966.0, 1.46127e7, 6.23872e6, 24368.4, -24368.4, -14567.7, -9040.55, 46731.1, 36536.2 };
    const matrix_t A = { {-1.0, -0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0} };
    const std::vector<double> b = { 1.0e-7 };
}
namespace CASE_13 {
    const matrix_t H;
	const matrix_t A = {{1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
				     {-1.0, -0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
				     {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0}};
    const std::vector<double> c = { 2.17299e6, -13162.7, 1.36145e6, 557966.0, 1.46127e7, 6.23872e6, 24368.4, -24368.4, -14567.7, -9040.55, 46731.1, 36536.2 };
    const std::vector<double> b = { 1.0e-7 , 1.0e-7, 1.0e-7 };
}
namespace CASE_14 {
    const matrix_t H;
    const std::vector<double> c = { 2.17299e6, -13162.7, 1.36145e6, 557966.0, 1.46127e7, 6.23872e6, 24368.4, -24368.4, -14567.7, -9040.55, 46731.1, 36536.2 };
	const matrix_t A = { {1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
				   {-1.0, -0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
				   {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
				   {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0}};
    const std::vector<double> b = { 1.0e-7 , 1.0e-7, 1.0e-7, 1.0e-7 };
}

namespace CASE_15 {
    const matrix_t H;
    const std::vector<double> c = { 2.17299e6, -13162.7, 1.36145e6, 557966.0, 1.46127e7, 6.23872e6, 24368.4, -24368.4, -14567.7, -9040.55, 46731.1, 36536.2 };
    const matrix_t A = { {1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
                {-1.0, -0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
                {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
                {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0}};
    const std::vector<double> b = {1.0e-7 , 1.0e-7, 1.0e-7, 1.0e-7, 9998.4, 0.100553, 0.0107047, 5.9893, 9998.69, 0.0107047, 9998.73, 0.367332, 0.189295, 0.0107047, 0.189295, 0.0107047,
                    0.0107047, 0.989295, 10.0, 10.0, 50.0, 1.0e-8, 50.0, 1.0e-8, 50.0, 1.0e-8, 50.0, 1.0e-8 };
}

namespace CASE_16 {
    const matrix_t H;
    const std::vector<double> c = {3.11274e+08, -1.99727e+06, 1.97926e+08, 8.40772e+07, 2.33394e+09, 1.01101e+09, 181234.0, -181234.0, -2.05993e+06, -679146.0, 7.39859e+06, 5.40838e+06};
    const matrix_t A = { {1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
                        {-1.0, -0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
                        {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
                        {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0} };
    const std::vector<double> b = {1.0e-07, 1.0e-07, 1.0e-07, 1.0e-07, 9998.28, 0.222839, 0.0124622, 5.98754, 9998.69, 0.0124622, 9998.86, 0.239774,
                                0.187538, 0.0124622, 0.187538, 0.0124622, 0.0124622, 0.987538, 10.0, 10.0, 50.0, 1.0e-08, 50.0, 1.0e-08, 50.0, 1.0e-08, 50.0, 1.0e-08};  
}   
namespace CASE_17 {
    const matrix_t H = {{ 10.0, 0.0 }, {0.0, 10.0} }; 
    const std::vector<double> c = {0.0, 0.0};
	const matrix_t A = { { 0.0, -1.0 }, { 0.0, -1.0 }};
	const std::vector<double> b = {-2.0 , -1.0};
}
namespace CASE_18 {
    const matrix_t H;
	const std::vector<double> c = {0.0, 0.0};
	const matrix_t A = {{ 0.0, 1.0}};
	const std::vector<double> b = {1.0};
}
namespace CASE_19 {
    const matrix_t H; 
	const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { { 0.0, 1.0 }, {0.0, -1.0}, {1.0, 0.0}, {-1.0, 0.0} };
	const std::vector<double> b = { 1.0, 1.0, 0.5, 2.5};
}
namespace CASE_20 {
    const matrix_t H; 
	const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { { 0.0, 1.0 }, {0.0, -1.0}, {1.0, 0.0}, {-1.0, 0.0} };
	const std::vector<double> b = { 1.0e-4, 1.0e-4, 1e-4, 1e-4 };
}
namespace CASE_21 {
    const matrix_t H;
	const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { { 0.0, 1.0 }, {0.0, -1.0}};
	const std::vector<double> b = { -1.0, -1.0};
}
namespace CASE_22 {
    const matrix_t H;
	const std::vector<double> c = { 5.0, -3.0 };
	const matrix_t A = { { 0.0, 1.0 }, {0.0, -1.0} };
	const std::vector<double> b = { -1.0, -1.0 };
}
namespace CASE_23 {
    const matrix_t H;
	const std::vector<double> c = { 5.0, -3.0 };
	const matrix_t A = { { 0.0, 1.0 }, {0.0, -1.0}, {-1.0, 0.0} ,{1.0, 0.0} };
	const std::vector<double> b = { -1.0, -1.0, 0.0, -1.0 };
}
namespace CASE_24 {
    const matrix_t H = { {10.0, 0.0 }, {0.0, 10.0} }; 
    const std::vector<double> c = {0.0, 0.0};
	const matrix_t A = {{0.0, -1.0}, {0.0, -1.0}, {0.0, -2.0}};
	const std::vector<double> b = {-2.0 , -1.0, -2.0};
}
namespace CASE_25 {
    const matrix_t H; 
	const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { { 0.0, 1.0 }, {0.0, -1.0}, {1.0, 0.0}, {-1.0, 0.0} };
	const std::vector<double> b = { 1.0e-10, 1.0e-10, 1e-10, 1e-10 };
}
namespace CASE_FSBL_INIT_PNT_1 {
    const matrix_t H = { { 1.0, 0.0 }, {0.0, 1.0} };
    const std::vector<double> c = { 0.5, 0.5 };
	const matrix_t A = { { 1.0, 0.0}, { -1.0, 0.0 } ,{0.0, 1.0}, {0.0, -1.0} };
	const std::vector<double> b = { 1.0 , 1.0, 1.0, 1.0 };
}
namespace CASE_FSBL_INIT_PNT_2 {
    const matrix_t H = { { 1.0, 0.0 }, {0.0, 1.0} };
	const std::vector<double> c = { 0.5, -0.5 };
	const matrix_t A = { { 1.0, 0.0}, { -1.0, 0.0 } ,{0.0, 1.0}, {0.0, -1.0} };
	const std::vector<double> b = { 1.0 , 1.0, 1.0, 1.0 };
}
namespace CASE_FSBL_INIT_PNT_3 {
    const matrix_t H = { { 1.0, 0.0 }, {0.0, 1.0} };
    const std::vector<double> c = { 0.9999, -0.9999 };
	const matrix_t A = { { 1.0, 0.0}, { -1.0, 0.0 } ,{0.0, 1.0}, {0.0, -1.0} };
	const std::vector<double> b = { 1.0 , 1.0, 1.0, 1.0 };
}
namespace CASE_CHOL_FULL_PIVOTING_1 { 
    const matrix_t H =  {{100.0, 1.0}, {1.0 , 5.0}};
    const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { { 0.0, -1.0 }, { 0.0, 1.0} };
	const std::vector<double> b = { 1.0, 1.0};
}
namespace CASE_CHOL_FULL_PIVOTING_2 { 
    const matrix_t H =  {{100.0, 1.0}, {1.0 , 5.0}};
	const std::vector<double> c = { 0.0, 0.0 };
	const matrix_t A = { { 0.0, -1.0 }, { 0.0, 1.0}, {-1.0, 0.0}, {1.0, 0.0} };
	const std::vector<double> b = { 0.0, 1.0, 0.0, 1.0};
}
namespace CASE_CHOL_FULL_PIVOTING_3 {
const matrix_t H;
const std::vector<double> c = { 2.17299e6, -13162.7, 1.36145e6, 557966.0, 1.46127e7, 6.23872e6, 24368.4, -24368.4, -14567.7, -9040.55, 46731.1, 36536.2 };
const matrix_t A = { {1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
					{-1.0, -0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
					{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
					{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0} };
const std::vector<double> b = {1.0e-7, 1.0e-7, 1.0e-7, 1.0e-7, 9998.4, 0.100553, 0.0107047, 5.9893, 9998.69, 0.0107047, 9998.73, 0.367332, 0.189295, 0.0107047, 0.189295, 0.0107047,
				  0.0107047, 0.989295, 10.0, 10.0, 50.0, 1.0e-8, 50.0, 1.0e-8, 50.0, 1.0e-8, 50.0, 1.0e-8 };
}
namespace S2F_0_9 {
   const matrix_t H; // identity hessian
   const std::vector<double> c = {570778.0, 10222.2, 180328.0, -89256.2, 4.54416e+06, -829971.0, 72473.2, -72473.2, -6312.13, -2146.21, 31635.8, 11407.7};
   const matrix_t A =  {{1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
        {-1.0, -0.0, -1.0, -1.0, -1.0, -1.0, -0.0, -1.0, 0.0, 0.0, 0.0, 0.0},
        {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0},
        {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0},
        {-0.207189, -0.00108862, -0.0584752, 0.00817318, -0.970473, 0.108479, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
        {-0.239071, -0.00298477, -0.0702216, 0.00615415, -0.966301, 0.0642658, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
        {-0.215828, -0.00138187, -0.0726273, 0.00179599, -0.973648, 0.0121701, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
        {-0.172416, 9.80689e-05, -0.0678598, -0.00466295, -0.98106, -0.0562867, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
        {0.151454, 0.000728159, 0.0728486, 0.0151555, 0.967758, 0.187001, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
        {0.156681, 0.00116893, 0.0810728, 0.0207967, 0.951491, 0.251217, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
        {0.151436, 0.00196287, 0.0873375, 0.0309983, 0.914551, 0.363416, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
        {0.158338, 0.00240623, 0.0924726, 0.0371848, 0.891488, 0.4126, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
        {-0.18488, -0.000776386, -0.0903423, -0.0201802, -0.955384, -0.210931, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
        {-0.240841, -0.00563,59 -0.0859885, -0.0012955, -0.966097, -0.0349905, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}
    };
    const std::vector<double> b =  {1.0e-07, 1.0e-07, 1.0e-07, 1.0e-07, 0.0347043, 0.0457049, 0.0355187, 0.0118212, 0.0068591, 0.00542588, 
                                       0.0117991, 0.00820019, 0.0160419, 0.0369264, 9998.49, 0.00542587, 5.99457, 0.00542587, 9998.69, 0.00542587,
                                       9998.62, 0.478296, 0.194574, 0.00542587, 0.194574, 0.00542587, 0.00542587, 0.994574, 10.0, 10.0, 50.0, 
                                       1.0e-08, 50.0, 1.0e-08, 50.0, 1.0e-08, 50.0, 1.0e-08 };
    
   
}

namespace S2F_0_12 {
    const matrix_t H;
    const std::vector<double> c = { -71456985.257797, -476495.058616684, -38142534.4566991, -11329249.085847, -400004507.047011, -124534199.800358, 102778.249391154, -102778.249391154, 518348.216705916, 374145.289686976, -1725533.52199782, -993717.209672331};
    const matrix_t A = {{ 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0}
            ,{ -1, -0, -1, -1, -1, -1, -0, -1, 0, 0, 0, 0}
            ,{ 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0}
            ,{ -0, -0, -0, -0, -0, -0, -0, -1, 0, 0, 0, 0}
            ,{ -0.207188931335665, -0.00108861748838428, -0.0584752386055707, 0.00817318113165994, -0.970472979361437, 0.108478585690887, -0, -0, 0, 0, 0, 0}
            ,{ -0.239071145426378, -0.00298476976086008, -0.0702215849704891, 0.00615415328330895, -0.966300701777006, 0.0642657585410567, -0, -0, 0, 0, 0, 0}
            ,{ -0.215827728163745, -0.00138187323932158, -0.0726272727373507, 0.00179599243861766, -0.973647998672731, 0.0121700669064334, -0, -0, 0, 0, 0, 0}
            ,{ -0.172415954162668, 9.80689354189832e-05, -0.06785978761253, -0.00466294994434431, -0.981059552326887, -0.0562866773209125, -0, -0, 0, 0, 0, 0}
            ,{ 0.159714828187853, 0.000479882862190867, 0.071142695681626, 0.0105353675699601, 0.9766435476406, 0.124442947179275, 0, 0, 0, 0, 0, 0}
            ,{ 0.151453648041225, 0.000728158799573478, 0.0728486325464835, 0.0151554554915985, 0.967757913326627, 0.187000728283102, 0, 0, 0, 0, 0, 0}
            ,{ 0.156680786732432, 0.00116893369793531, 0.0810727593950503, 0.0207967349295145, 0.951490725198397, 0.251216774966738, 0, 0, 0, 0, 0, 0}
            ,{ -0.171959291274669, -0.0014732210304227, -0.0928828449861624, -0.0268442118592015, -0.930039753337864, -0.310009764962798, -0, -0, 0, 0, 0, 0}
            ,{ 0.151436112931455, 0.00196286863208485, 0.0873375100635415, 0.0309982781587095, 0.914551013769506, 0.363415685059422, 0, 0, 0, 0, 0, 0}
            ,{ 0.158337669229312, 0.00240622925234437, 0.0924726343588144, 0.0371848414737778, 0.891488117784391, 0.412599597518429, 0, 0, 0, 0, 0, 0}
            ,{ -0.184879704235042, -0.000776386069035014, -0.0903423348469033, -0.020180154264042, -0.955383806195511, -0.210930554814383, -0, -0, 0, 0, 0, 0}
            ,{ -0.240840999527256, -0.00563590396203898, -0.0859885072653377, -0.00129549858781724, -0.966097205017066, -0.0349905457680322, -0, -0, 0, 0, 0, 0}};
    const std::vector<double> b = { 9.99999997779554e-08, 1.00000000222045e-07, 1e-07, 1e-07, 0.0332003279613448, 0.0477405033919854, 0.0342928160885033, 0.00763996459038718, 0.00225999478302985, 0.00958194396942356, 0.00739323442348047, 0.00225999478302984, 0.0122965038995503, 0.00785643559688391, 0.0132809678814991, 0.0439707948229996, 9998.49773999522, 0.00225998478302969, 4.00162391920294, 1.99837606079706, 9998.69773999522, 0.00225998478302986, 9998.60903996913, 0.490960010867881, 0.19773999521697, 0.00225998478302984, 0.19773999521697, 0.00225998478302984, 0.0022599847830298, 0.99773999521697, 9.99999999, 9.99999999, 49.99999997, 1.00000008274037e-08, 49.99999997, 1.00000008274037e-08, 49.99999997, 1.00000008274037e-08, 49.99999997, 1.00000008274037e-08};
}

namespace C0_0_9 {
    const matrix_t H;
    const std::vector<double> c ={ 157446677.881049, -2729220.02012603, 104509958.754182, 49245632.5259407, -1267226806.05408, -358974193.940055, -1.17995525354271, 1524348.61606887, -0.0430185893626249, 3890397.43635971, 25085794.955017, 184600.882008675, -184600.882008675, -1293507.49441499, 214891.803208914, 6508547.38552353, 1469144.8788607, 0.0116005380332317, 446788.262346849, 1.07569989721447e-05, -116416.928847786};
    const matrix_t A = {{ 1, 0, 1, 1, 1, 1, 0.77662772026357, 0, 0.617076091880406, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -1, -0, -1, -1, -1, -1, -0.77662772026357, -0, -0.617076091880406, -0, -1, -0, -1, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ 0, 0, 0, 0, 0, 0, 0, 0.22337227973643, 0, 0.079775814191582, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0, -0, -0, -0, -0, -0, -0, -0.22337227973643, -0, -0.079775814191582, -0, -0, -1, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.427926379477398, -0.0029542680898242, -0.24169465622383, -0.0655864780214495, 0.820468933832386, 0.283412774854407, 0.0168093307890539, -0.0189908070204197, 0.00408497456298121, -0.000633547035779933, 0.000167374999118708, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.389854069481138, -0.000850501734205154, -0.240031168565678, -0.101506205686232, 0.838569264526087, 0.277087702429151, -0.00817435149319415, 0.00692652544148676, -0.00191751986330863, 0.000359410288938918, -1.99869865928639e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.264151098018243, -0.00354836766833895, -0.184205267539452, -0.109652212912727, 0.849295682198159, 0.401990573412614, -0.0203470819123587, 0.0299318084503023, -0.00474943426029326, 0.00488045453568397, 0.000740501146493443, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.168017120600727, 0.00341019536484257, -0.108707264129829, -0.0377678703189278, 0.936912282309114, 0.283864040545269, -0, -0.0110986438193188, -0, -0.00122058888367921, -0.00261695651190903, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.453574740576161, -0.00222593681448451, -0.232385084558953, -0.0363083537567534, 0.831650250647711, 0.215049795728224, 0.0273373662931715, -0.0157038592803582, 0.00666791281355195, -7.06328531536284e-05, -0.00411253583388034, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.409520637719933, 0.00060036801452275, -0.231678676843047, -0.0871023857675868, 0.852564059606305, 0.209929334685077, -0.00822711418100706, 0.004632521298224, -0.00238777438396248, 5.112605654068e-05, 2.99022756113157e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.276539908697387, 0.00134515280440975, -0.193177433987236, -0.0909080198238104, 0.838452603996055, 0.417858254931013, 0.00351647241485283, -0.00717824019903688, 0, -0.00069263012642068, 0.0164139447588173, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.218034863751831, -0.000228448387469042, -0.149620677899577, -0.0780570820332704, 0.87426164728643, 0.399433866841133, -0.000218695954489234, 0.00710850707057899, -0, -0.00359019644472765, 0.0060975882552364, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.333073327926147, -0.000330082870655002, -0.206068302611755, -0.0655083577421987, 0.87105932405977, 0.288392824281197, 0.00658566368020972, -0.0152697979658958, -0, -0.000900834505082525, -0.0106977879464976, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.368608154543028, -0.00130638299391367, -0.235857735347827, -0.103666518505689, 0.832219267772222, 0.324100124135947, -0.00773515269957013, 0.00772143367792921, -0.00112501714786549, 0.000428682632756294, 2.66716863080461e-05, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.393021235288722, -0.00115349303672901, -0.225104780910837, -0.0670855621961522, 0.84266842286024, 0.282584714750264, 0.0117014743094126, -0.0166194572770616, 0.00156469550874293, -0.00063055588374273, 0.000417602254292088, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ 0.133211844265735, 0.00283386448649279, 0.0832087078373644, 0.0383575740149226, -0.965180833746251, -0.205298596586782, -0, -0.0108104191798383, -0, -0.00362323563481247, 0.000180621704077396, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.389532807436409, -0.00537095903723013, -0.183249079969784, -0.0467677550016288, 0.899445952918085, 0.0582531750124905, -0.00830556790080084, -0.000417977536592749, -0.00150783402748906, 2.83674088420294e-05, -0.000101787849978584, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.298380596154362, -0.0115481160903499, -0.227715101897989, -0.136735462927776, 0.801898899287045, 0.44276113045714, -0.00728840586929388, 0.0339478189170788, 0, 7.09676652966169e-05, -0.000250542682419335, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.155586995591907, 0.00273829293001409, -0.082646375672559, 0.0120558237739617, 0.965912552348681, 0.180936585731123, 0.0161093850438504, -0.0519491351204396, -0, -0.00582283910142466, -0.00960130374485738, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.373478382318713, 0.00205917628528633, -0.167416014352728, -0.0126213561097589, 0.907115597569467, 0.0950028305758611, 0.0188793231954081, 0.00336553051604106, 0.000953673989327511, 0.00120853538280574, -0.00823810528971839, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ 0.113423261694562, -0.00249367950500688, 0.0672542594005464, 0.0253788200626457, -0.960128785248878, -0.245083173921826, 0, 0.00601133786857965, 0, 0.00153107275785495, -0.00319352218756773, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.201780707513906, 0.00151856037288093, -0.128713281907247, -0.0531423887368397, 0.913384352836017, 0.324549184788242, -0, -0.00984224931295538, -0, -0.000987000514193096, -0.0137849278436038, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.217098891992845, -0.00430038677039372, -0.134918670152707, -0.0629123557522496, 0.935565229247757, 0.234883967392058, -0.00337220188018915, 0.0147385607601626, 0, 0.00253792272841728, 0.000866845552733741, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.370926839293074, -0.00177928699932985, -0.21621217333519, -0.0873527581685478, 0.870896774926025, 0.22220119970271, -0.0114771138152247, 0.00740715010127306, -0.00324353989651868, 0.000463931510126446, 0.000119366298031515, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.317694227180643, 0.00161803565955774, -0.180268799888446, -0.0668048052950889, 0.901678354146144, 0.221401288252773, -0.00688033516117659, 0.0042765156488936, -8.35119853354021e-05, 0.000131422189332287, 3.36631493558079e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.409484692336922, 6.9426010209691e-05, -0.19434688361917, -0.0106168523159271, 0.877438679634318, 0.151091497288023, 0.0343645875243476, -0.0212269727549086, 0.00735652807449054, -0.00109338580053119, -0.00497522654335629, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.144575529645227, 0.00281915414429882, -0.0752979633604319, -0.0211447184774084, 0.97834431839836, 0.125759472320935, -0, -5.61000285508106e-06, -0, 0.000112053084897064, -0.000152917751706291, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.30956215438919, -0.000142156347839626, -0.212097377421971, -0.0896200817558026, 0.833412673608021, 0.395222360095445, 0.00594342637889748, -0.0106850221828249, -0, -0.000851517609941176, -0.01505251640123, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.241942779274484, 0.00246451260278445, -0.150490240938184, -0.0483058251409908, 0.914379998839356, 0.282909207493901, 0.000622433020331994, -0.0156612511611868, -0, -0.0010053448150467, -0.0100884826956381, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.344794400130679, 0.00117876901531136, -0.169122764594419, -0.0430825923186066, 0.917264521101255, 0.0963218493731054, -0.00134387239110678, -0.00160761877772746, 0, -0.000562909049286709, -7.23994335958089e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.239616125263415, -0.00378105190249815, -0.161658625309266, -0.0817507395723166, 0.883123063032497, 0.359995687314735, -0.000462322658446441, 0.0157873202478372, 0, -0.000621428660536699, -0.00020702951317382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.17847759896443, 0.000851783596081388, -0.118169853824854, -0.044577318901773, 0.904961283543795, 0.364584760608459, 0.00188019531187623, -0.0175332868985861, -0, -0.00196854096979006, -0.0014037808058946, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.186999796302932, -0.00270292986769844, -0.121818873278866, -0.0608311406101709, 0.927485812028101, 0.292835074493596, -0.00117721223424938, 0.0202083662577885, 0, 0.00399137858133247, 0.00868892584823426, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ 0.0775704837929533, -0.00178850307243562, 0.0508000079194933, 0.023665767178059, -0.967149509197117, -0.23462958968836, 0, 0.000645820715283781, 0, 0.00388430600603414, 0.0198542072378616, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.401133364221954, -0.00205843841111155, -0.211312887888409, -0.042587551880076, 0.857455004090589, 0.237907847661132, 0.0176616020497297, -0.0217329414481657, 0.00245907028338994, -0.000983633520147792, -0.000674733391756776, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.424761791507098, -0.0111616697009951, -0.271112035027349, -0.0945345693349287, 0.828807762427673, 0.222856569375051, 0.0173570292773941, -0.011079490958714, 0.0016084204336368, 0, 0.000592531552368351, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.308878589135708, 0.00121178539376827, -0.191914537476609, -0.0828882080796551, 0.872421970949742, 0.315759056313864, -0.00420417290519462, 0.00702372185392796, -6.08633921987603e-08, 0.000137576105779305, -1.76191767372874e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.297431169570271, -0.00058321541126799, -0.216514717450927, -0.109571124315501, 0.808603992504663, 0.445635455918064, 0.00323778904089428, -0.0021933518389904, 4.23662649622736e-06, -0.00188738749292721, -0.0141305515032203, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.340697880639408, 0.00432394454669756, -0.171737153515505, -0.0631617032833848, 0.903862601429977, 0.182338912183293, -0.0116995942997376, 0.00837125316972946, -0.000412200418564675, 0.000959807988728389, -0.000276197726511277, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.367308406252932, -0.00299697679310237, -0.195251520918817, -0.0666836720651871, 0.896739655926178, 0.135093401890243, -0.00987942695151918, 0.00338371083620232, -0.00206444468070448, 0.000105612472212488, -0.000347675421788104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.180943540131676, 0.00175613446536675, -0.104011058634987, -0.0346147846683782, 0.95195141661324, 0.221332966522876, 0.000482464465885549, -0.00629696514960135, 0, -0.000448701060257806, -1.01920931752053e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.461030723773476, -0.00946934462389599, -0.262795624899318, -0.0645084263113841, 0.812096404871918, 0.226796979268723, 0.0457356317844718, -0.0148391876073228, 0.0297916278629637, 0, -0.00109293746237232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.500030911144395, -0.0135194088360926, -0.299956763246559, -0.133178209289771, 0.772342780505248, 0.194608109623858, -0.0705238999250393, 0.00613507423392865, -0.0509165170041562, -0, 0.00929408454717253, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.465148436783145, -0.00965901711322274, -0.248418213939788, -0.0760232044565899, 0.821181261607516, 0.204237145747294, -0.000210482789354388, -0.000851341343861333, 0.000283180193418139, -0.000413388052168772, -4.72187943206914e-05, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.439238126908354, -0.000861477284198116, -0.248078207927902, -0.108472620061124, 0.813133140292765, 0.267846887067585, -0.0267888057425488, 0.00945141838861182, -0.00498257172085342, 0.000810871313261405, 0.000327818864477293, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.129694597767528, 0.00156425414608601, -0.0875314057609456, -0.0257053028568343, 0.912273801882203, 0.376233769263774, -0, -0.0317753052485973, -0, -0.00377366010186205, -0.0059249945311533, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.331916243641523, 0.000104116587558886, -0.204153954651186, -0.0934360184729792, 0.877172116323706, 0.26386771184872, -0.0153341690666667, 0.0107193627064223, -0.00378235419334598, 0.00101513457013459, -2.06763492092869e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.446847765755872, -0.00740422313854767, -0.227822552859809, -0.0621239594873549, 0.846767998786934, 0.165790898840916, -0.00134690567906792, -0.00223963292413066, -7.15889602070691e-05, -0.000498460915044268, 1.33355967806945e-05, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ 0.134111723648148, 0.00226509434008036, 0.0909523832293692, 0.0471850286990567, -0.942133861832802, -0.289044749820665, -0, -0.0160620821834075, -0, -0.00452571759053124, -0.00828241297355701, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.425926255912551, -0.00506121570532426, -0.275106007180749, -0.141618234123681, 0.78181902485713, 0.331710474004667, -0.0358348950104721, 0.013242784811884, -0.00743112654053354, 0.000891344785868321, 0.00581513684511523, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.44720939686972, -0.00195855814178639, -0.210749898364763, -0.00630414999265487, 0.853012872584165, 0.159024646975035, 0.0447677484218707, -0.0205593299008324, 0.0123045680660154, -0.000237881819226105, -0.00682363289819595, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
            ,{ -0.249383288128364, 0.00150871832660613, -0.162221738675521, -0.0605685650870244, 0.892558244039853, 0.33273239659048, 0.00147710845158804, -0.0140997349716984, -0, -0.00106445692546227, 0.0157502891129019, -0, -0, 0, 0, 0, 0, 0, 0, 0, 0}};
    const std::vector<double> b = { 1e-07, 1e-07, 1e-07, 1e-07, 0.231501462493308, 0.185946332828566, 0.0620477710440007, 0.0364484906758658, 0.254535859432201, 0.201978044010092, 0.106566792890159, 0.0529326539298031, 0.166758061426684, 0.168719778601206, 0.204279099529919, 0.0132236594228277, 0.175551027408611, 0.0888515731132375, 0.0617844316184403, 0.187826072627652, 0.0132236594228277, 0.0607602158225142, 0.0430802073502564, 0.165801022272299, 0.132617232634363, 0.230773268964061, 0.0132236594228277, 0.14941212275381, 0.0971732094366874, 0.15812969336888, 0.0621546432355495, 0.0405348324411019, 0.015022172933396, 0.0295205735529259, 0.211724900991848, 0.22531448916794, 0.125517008094465, 0.135091658771016, 0.144461007530682, 0.162954719642047, 0.0386051656359346, 0.262336780103993, 0.222689710855602, 0.230166637751992, 0.206433420850843, 0.0132236594228277, 0.135942942060234, 0.218560034874773, 0.0213574629886517, 0.189069883848885, 0.26015640875588, 0.087970954208474, 9998.48677633058, 0.0132236494228276, 4.76890874675844, 1.23109123324156, 9998.58640454622, 0.113595433781006, 9999.08677633058, 0.0132236494228277, 0.0132236494228277, 0.186776330577172, 0.0173321360424789, 0.182667843957521, 9999.48677633058, 0.0132236494228277, 0.0132236494228277, 3.48677633057717, 9998.95244342101, 0.347556558992913, 0.0132236494228277, 3.48677633057717, 0.0132236494228277, 0.986776330577172, 0.0132236494228276, 0.986776330577172, 10.1475653098152, 9.85243467018478, 49.99999997, 1.00000008274037e-08, 49.99999997, 1.00000008274037e-08, 49.99999997, 1.00000008274037e-08, 49.99999997,
            1.00000008274037e-08, 99.99999997, 9.99999372197635e-09, 99.99999997, 9.99999372197635e-09, 99.99999997, 9.99999372197635e-09, 99.99999997, 9.99999372197635e-09};
}
struct QPProblem : public DenseQPProblem {
    QPProblem() = default;
    QPProblem(const matrix_t& H, const matrix_t& A, const std::vector<double>& c, const std::vector<double>& b, std::size_t nLinEq = 0)
    {
        this -> H = H;
        this -> A = A;
        this -> b = b;
        this -> c = c;
        this -> nEqConstraints = nLinEq;
    }
    QPProblem(matrix_t& H, const matrix_t& A, const std::vector<double>& c, const std::vector<double>& b, const std::vector<double>& lw,
                const std::vector<double>& up, std::size_t nLinEq = 0):
        QPProblem(H, A, c, b, nLinEq)
    {
        this -> lw = lw;
        this -> up = up;
    }
    void clear() {
        nEqConstraints = 0;
        H.clear();
        A.clear();
        c.clear();
        b.clear();
        lw.clear();
        up.clear();
    }
    /*
    matrix_t H;
    matrix_t A;
    std::vector<double> c;
    std::vector<double> b;
    std::vector<double> lw;
    std::vector<double> up;
    std::size_t nLinEq = 0;*/
};
static QPProblem simple_1(SIMPLE_1::H, SIMPLE_1::A, SIMPLE_1::c, SIMPLE_1::b);
static QPProblem simple_2(SIMPLE_2::H, SIMPLE_2::A, SIMPLE_2::c, SIMPLE_2::b);
static QPProblem case_1(CASE_1::H, CASE_1::A, CASE_1::c, CASE_1::b);
static QPProblem case_2(CASE_2::H, CASE_2::A, CASE_2::c, CASE_2::b);
static QPProblem case_3(CASE_3::H, CASE_3::A, CASE_3::c, CASE_3::b);
static QPProblem case_4(CASE_4::H, CASE_4::A, CASE_4::c, CASE_4::b);
static QPProblem case_5(CASE_5::H, CASE_5::A, CASE_5::c, CASE_5::b);
static QPProblem case_6(CASE_6::H, CASE_6::A, CASE_6::c, CASE_6::b);
static QPProblem case_7(CASE_7::H, CASE_7::A, CASE_7::c, CASE_7::b);
static QPProblem case_8(CASE_8::H, CASE_8::A, CASE_8::c, CASE_8::b);
static QPProblem case_9(CASE_9::H, CASE_9::A, CASE_9::c, CASE_9::b);
static QPProblem case_10(CASE_10::H, CASE_10::A, CASE_10::c, CASE_10::b);
static QPProblem case_11(CASE_11::H, CASE_11::A, CASE_11::c, CASE_11::b);
static QPProblem case_12(CASE_12::H, CASE_12::A, CASE_12::c, CASE_12::b);
static QPProblem case_13(CASE_13::H, CASE_13::A, CASE_13::c, CASE_13::b);
static QPProblem case_14(CASE_14::H, CASE_14::A, CASE_14::c, CASE_14::b);
static QPProblem case_15(CASE_15::H, CASE_15::A, CASE_15::c, CASE_15::b);
static QPProblem case_16(CASE_16::H, CASE_16::A, CASE_16::c, CASE_16::b);
static QPProblem case_17(CASE_17::H, CASE_17::A, CASE_17::c, CASE_17::b);
static QPProblem case_18(CASE_18::H, CASE_18::A, CASE_18::c, CASE_18::b);
static QPProblem case_19(CASE_19::H, CASE_19::A, CASE_19::c, CASE_19::b);
static QPProblem case_20(CASE_20::H, CASE_20::A, CASE_20::c, CASE_20::b);
static QPProblem case_21(CASE_21::H, CASE_21::A, CASE_21::c, CASE_21::b);
static QPProblem case_22(CASE_22::H, CASE_22::A, CASE_22::c, CASE_22::b);
static QPProblem case_23(CASE_23::H, CASE_23::A, CASE_23::c, CASE_23::b);
static QPProblem case_24(CASE_24::H, CASE_24::A, CASE_24::c, CASE_24::b);
static QPProblem case_25(CASE_25::H, CASE_25::A, CASE_25::c, CASE_25::b);
static QPProblem case_fsbl_init_pnt_1(CASE_FSBL_INIT_PNT_1::H, CASE_FSBL_INIT_PNT_1::A, CASE_FSBL_INIT_PNT_1::c, CASE_FSBL_INIT_PNT_1::b);
static QPProblem case_fsbl_init_pnt_2(CASE_FSBL_INIT_PNT_2::H, CASE_FSBL_INIT_PNT_2::A, CASE_FSBL_INIT_PNT_2::c, CASE_FSBL_INIT_PNT_2::b);
static QPProblem case_fsbl_init_pnt_3(CASE_FSBL_INIT_PNT_3::H, CASE_FSBL_INIT_PNT_3::A, CASE_FSBL_INIT_PNT_3::c, CASE_FSBL_INIT_PNT_3::b);
static QPProblem case_chol_full_pvt_1(CASE_CHOL_FULL_PIVOTING_1::H, CASE_CHOL_FULL_PIVOTING_1::A, CASE_CHOL_FULL_PIVOTING_1::c, CASE_CHOL_FULL_PIVOTING_1::b);
static QPProblem case_chol_full_pvt_2(CASE_CHOL_FULL_PIVOTING_2::H, CASE_CHOL_FULL_PIVOTING_2::A, CASE_CHOL_FULL_PIVOTING_2::c, CASE_CHOL_FULL_PIVOTING_2::b);
static QPProblem case_chol_full_pvt_3(CASE_CHOL_FULL_PIVOTING_3::H, CASE_CHOL_FULL_PIVOTING_3::A, CASE_CHOL_FULL_PIVOTING_3::c, CASE_CHOL_FULL_PIVOTING_3::b);
static QPProblem s2f_0_9(S2F_0_9::H, S2F_0_9::A, S2F_0_9::c, S2F_0_9::b);
static QPProblem s2f_0_12(S2F_0_12::H, S2F_0_12::A, S2F_0_12::c, S2F_0_12::b);
static QPProblem c0_0_9(C0_0_9::H, C0_0_9::A, C0_0_9::c, C0_0_9::b);

} // QP_NNLS_TEST_DATA


#endif
